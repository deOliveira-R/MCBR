/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      porousMediumProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// constants needed to calculate fluid flow in regions treated as porous medium
// all cellZones must be included
// by not defining one of the properties, a default value will be used corresponding to a region of clear fluid

model           uniformCorrelation;

correlation     GenFoam;

zones
{
    // hex0
    // {
    //     fluidFraction       0.3;
    //     // volumetricAreaSS    2;
    //
    //     hydraulicDiameter   0.00122;
    //     reynoldsTurb        (2.3e3 2.3e3 2.3e3); // transition Reynolds to turbulent
    //     reynoldsLam         (1e3 1e3 1e3); // transition Reynolds to laminar
    //
    //     // nusseltConstTurb1   (0.0185 0.0185 0.0185); // A in A*Re^b*Pr^c + D for Nusslet (turbulent case)
    //     // nusseltReExpTurb    (0.827 0.827 0.827); // b in A*Re^b*Pr^c + D for Nusslet (turbulent case)
    //     // nusseltPrExpTurb    (0.827 0.827 0.827); // c in A*Re^b*Pr^c + D for Nusslet (turbulent case)
    //     // nusseltConstTurb2   (4.82 4.82 4.82); // D in A*Re^b*Pr^c + D for Nusslet (turbulent case)
    //     // nusseltConstLam1    (0.0185 0.0185 0.0185); // A in A*Re^b*Pr^c + D for Nusslet (laminar case)
    //     // nusseltReExpLam     (0.827 0.827 0.827); // b in A*Re^b*Pr^c + D for Nusslet (laminar case)
    //     // nusseltPrExpLam     (0.827 0.827 0.827); // c in A*Re^b*Pr^c + D for Nusslet (laminar case)
    //     // nusseltConstLam2    (4.82 4.82 4.82); // D in A*Re^b*Pr^c + D for Nusslet (laminar case)
    //
    //     darcyConstTurb      (5.0 5.0 0.2496); // A in A*Re^b for Darcy friction factor (in case of turbulent flow)
    //     darcyExpTurb        (0 0 0); // b in A*Re^b for Darcy friction factor (in case of turbulent flow)
    //
    //     darcyConstLam       (5.0 5.0 0.2496); // A in A*Re^b for Darcy friction factor (in case of laminar flow)
    //     darcyExpLam         (0 0 0); // b in A*Re^b for Darcy friction factor (in case of laminar flow)
    //
    //     // rhoCpStructures     4.8e6;
    // }
    //
    // hex1
    // {
    //     $hex0;
    // }
    //
    // hex2
    // {
    //     $hex1;
    // }
    //
    // hex3
    // {
    //     $hex1;
    // }
    //
    // hex4
    // {
    //     $hex1;
    // }
    //
    // hex5
    // {
    //     $hex1;
    // }
    //
    // hex6
    // {
    //     $hex1;
    // }
    //
    // hex7
    // {
    //     $hex1;
    // }
    //
    // hex8
    // {
    //     $hex1;
    // }
    //
    // hex9
    // {
    //     $hex1;
    // }
    //
    // hex10
    // {
    //     $hex1;
    // }
    //
    // hex11
    // {
    //     $hex1;
    // }
    //
    // hex12
    // {
    //     $hex1;
    // }
    //
    // hex13
    // {
    //     $hex1;
    // }
    //
    // hex14
    // {
    //     $hex1;
    // }
    //
    // hex15
    // {
    //     $hex1;
    // }
    //
    // pump0
    // {
    //     pumpMomentumSource  (0 0 -100000);
    // }
    // pump1
    // {
    //     $pump0;
    // }
    // pump2
    // {
    //     $pump1;
    // }
    // pump3
    // {
    //     $pump1;
    // }
    // pump4
    // {
    //     $pump1;
    // }
    // pump5
    // {
    //     $pump1;
    // }
    // pump6
    // {
    //     $pump1;
    // }
    // pump7
    // {
    //     $pump1;
    // }
    // pump8
    // {
    //     $pump1;
    // }
    // pump9
    // {
    //     $pump1;
    // }
    // pump10
    // {
    //     $pump1;
    // }
    // pump11
    // {
    //     $pump1;
    // }
    // pump12
    // {
    //     $pump1;
    // }
    // pump13
    // {
    //     $pump1;
    // }
    // pump14
    // {
    //     $pump1;
    // }
    // pump15
    // {
    //     $pump1;
    // }
}


/*
Below are listed all possible options for a porous region
Linear interpolation between fully laminar and fully turbulent
Principal axis of the porous region can be rotated compared to the global coordinate system. The rotated local system can be defined by defining the z and x axis. All quantities must be defined according to this coordinate system.
The solver will take care of rotating quantities back to the global coordinate system

    fluidFraction       0.2; // fraction of the volume occupied by the fluid
    rhoCpStructures     4.8e6; // rho*cp for the subscale structure
    volumetricAreaSS    0.0; // wet area diveded by total volume for sub-scale structures (equivalent eg to the area of heat exchange between fluid and sub-scale structure)
    hydraulicDiameter   0.0032; // characteristic length
    localZaxis          (0 0 1); // z axis for the local coordinate system
    localXaxis          (1 0 0); // x axis for the local coordinate system
    reynoldsTurb        (2e3 2e3 2e3);  // transition Reynolds to fully turbulent (one value for each principal direction)
    reynoldsLam         (1e3 1e3 1e3);  // transition Reynolds to fully laminar (one value for each principal direction)
    darcyConstTurb      (2 1 0.687);  // A in A*Re^b for Darcy friction factor (in case of turbulent flow)
    darcyConstLam       (2 1 0.687);  // A in A*Re^b for Darcy friction factor (in case of laminar flow)
    darcyExpTurb        (-0.25 -0.25 -0.25); // b in A*Re^b for Darcy friction factor (in case of turbulent flow)
    darcyExpLam         (-0.25 -0.25 -0.25); // b in A*Re^b for Darcy friction factor (in case of laminar flow)
    nusseltConstTurb1   (0.0185 0.0185 0.0185); // A in A*Re^b*Pr^c + D for Nusslet (turbulent case)
    nusseltConstLam1    (0.0185 0.0185 0.0185); // A in A*Re^b*Pr^c + D for Nusslet (laminar case)
    nusseltConstTurb2   (4.82 4.82 4.82); // D in A*Re^b*Pr^c + D for Nusslet (turbulent case)
    nusseltConstLam2    (4.82 4.82 4.82); // D in A*Re^b*Pr^c + D for Nusslet (laminar case)
    nusseltReExpTurb    (0.827 0.827 0.827); // b in A*Re^b*Pr^c + D for Nusslet (turbulent case)
    nusseltReExpLam     (0.827 0.827 0.827); // b in A*Re^b*Pr^c + D for Nusslet (laminar case)
    nusseltPrExpTurb    (0.827 0.827 0.827); // c in A*Re^b*Pr^c + D for Nusslet (turbulent case)
    nusseltPrExpLam     (0.827 0.827 0.827); // c in A*Re^b*Pr^c + D for Nusslet (laminar case)

    pumpMomentumSource     (0 0 0); // momentum source that can be used to emulate a pump region  (simply added to the momentum equation)

    externalVolHeatSource       0; // uniform heat source directly to the coolant

    externalHeatTransferCoefficient 0.0; //heat transfer coefficient from the porous medium to a hypothetical external environment (useful for simplified heat exchangers)
    externalT                       0.0; // temperature of the hypothetical external environment (eg, secondary fluid in a heat exchanger)

    turbulenceIntensityConst    (0.16 0.16 0.16);       // A in A*Re^b for turbulent intensity  (in case of laminar flow) - porouskEpsilon model should be used
    turbulenceIntensityExp      (-0.125 -0.125 -0.125); // b in A*Re^b for  turbulent intensity  (in case of laminar flow) - porouskEpsilon model should be used
    turbulenceLengthScaleConst  (0.07 0.07 0.07);  // A in A*Dh for  turbulent lenght scale  (in case of laminar flow) - porouskEpsilon model should be used
    kepsilonConvergenceRate     (5 5 5);  // rate of convergence of k and epsilon to their equilibrium value in the pororus medium (in m^-1) - porouskEpsilon model should be used
*/

// ************************************************************************* //
